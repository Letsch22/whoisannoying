<!DOCTYPE html>
<html>
<head>
  <% include ../partials/header.ejs %>
</head>

<body>

  <% include ../partials/nav.ejs %>

<script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else {
      console.log('log in to continue');
      window.location.replace('/');
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '860386630696520',
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.2' // use version 2.2
  });

  // Now that we've initialized the JavaScript SDK, we call 
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  var groupId;

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });



  };

  $(window).load(function(){
        $('#myModal').modal('show');
    });

  var associativeArray = {};
  var groupName = "";
  var array = [];

  function apiCall() {
    FB.api(
      "/" + groupID,
      function (response) {
        if (response && !response.error) {
          groupName = response.name;
        }
      }
      );
    FB.api(
      "/" + groupID + "/feed?limit=10000&fields=from",
      function (response) {
        if (response && !response.error) {
          for (var i = response.data.length - 1; i >= 0; i--) {
            if (associativeArray[response.data[i].from.name] === undefined) {
              associativeArray[response.data[i].from.name] = 1;
            } else {
              associativeArray[response.data[i].from.name] = associativeArray[response.data[i].from.name] + 1;
            }
          }
          for (var key in associativeArray) {
            console.log(key);
            console.log(associativeArray[key]); 
          }
        }
        Quicksort(associativeArray);
        addHtml();
      }
      );
  }

  function Quicksort() {
    var i = 0;
    for (var key in associativeArray) {
      array[i] = key;
      i++;
    }
    var pIndex = Math.floor((Math.random() * array.length) + 1);
    QuicksortRecur(pIndex, 0, array.length - 1);
  }

  function QuicksortRecur(pIndex, start, end) {
    if (end > start) {
      var newIndex = partition(pIndex, start, end);
      QuicksortRecur(pIndex, start, newIndex - 1);
      QuicksortRecur(pIndex, newIndex + 1, end);
    }
  }

  function partition(pIndex, start, end) {
    var pValue = associativeArray[array[pIndex]];
    var temp = array[pIndex];
    array[pIndex] = array[end];
    array[end] = temp;
    var nextLeft = start;
    for (var i = start; i < end; i++) {
      if (associativeArray[array[i]] >= pValue) {
        var temp2 = array[i];
        array[i] = array[nextLeft];
        array[nextLeft] = temp2;
        nextLeft++;
      }
    };
    var temp3 = array[nextLeft];
    array[nextLeft] = array[end];
    array[end] = temp3;
    return nextLeft;
  }

  function addHtml() {
    document.getElementById('groupName').innerHTML = 'Top posters for ' + groupName;
    var html = "";
    for (var i = 0; i <= array.length - 1; i++) {
      html += '<li class="list-group-item"><span class="badge">' + associativeArray[array[i]] + '</span>' + array[i] + '</li>';
    }
    document.getElementById("namesList").innerHTML = html;
  }

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));


  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
    });
  }

  function getGroupID() {
    groupID = $('#groupid').val();
    console.log('group id is ' + groupID)
    apiCall();
  }
</script>

<div class="container">
  <div class="jumbotron text-center">

    <div>
      <h1>whoisannoying</h1>
      <p>Now that you've logged in, check out the data below.</p>
    </div>
  </div>
  <div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-body">
          <p>Provide the ID of the group you would like data on. This ID is found at the following place in the URL: </p>
          <p><strong>https://www.facebook.com/groups/[GROUP-ID-HERE]/</strong></p>
        </div>
        <div class="modal-footer">
          <div class="form-group">
            <label for="groupid">Group ID:</label>
            <input type="text" class="form-control" id="groupid">
            <button type="submit" class="btn btn-default" data-dismiss="modal" onclick="getGroupID()">Submit</button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="well">
    <h1 id="groupName"></h1>
  </div>
  <ul class="list-group" id="namesList"></ul>
</div>


</body>
</html>
